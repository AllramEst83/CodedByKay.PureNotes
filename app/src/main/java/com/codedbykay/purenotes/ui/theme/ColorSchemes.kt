package com.codedbykay.purenotes.ui.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme

// REBECKA'S
val lightSchemeRebecka = lightColorScheme(
    primary = primaryLightBlue,
    onPrimary = onPrimaryLightBlue,
    primaryContainer = primaryContainerLightBlue,
    onPrimaryContainer = onPrimaryContainerLightBlue,
    secondary = secondaryLightBlue,
    onSecondary = onSecondaryLightBlue,
    secondaryContainer = secondaryContainerLightBlue,
    onSecondaryContainer = onSecondaryContainerLightBlue,
    tertiary = tertiaryLightBlue,
    onTertiary = onTertiaryLightBlue,
    tertiaryContainer = tertiaryContainerLightBlue,
    onTertiaryContainer = onTertiaryContainerLightBlue,
    error = errorLightBlue,
    onError = onErrorLightBlue,
    errorContainer = errorContainerLightBlue,
    onErrorContainer = onErrorContainerLightBlue,
    background = backgroundLightBlue,
    onBackground = onBackgroundLightBlue,
    surface = surfaceLightBlue,
    onSurface = onSurfaceLightBlue,
    surfaceVariant = surfaceVariantLightBlue,
    onSurfaceVariant = onSurfaceVariantLightBlue,
    outline = outlineLightBlue,
    outlineVariant = outlineVariantLightBlue,
    scrim = scrimLightBlue,
    inverseSurface = inverseSurfaceLightBlue,
    inverseOnSurface = inverseOnSurfaceLightBlue,
    inversePrimary = inversePrimaryLightBlue,
    surfaceDim = surfaceDimLightBlue,
    surfaceBright = surfaceBrightLightBlue,
    surfaceContainerLowest = surfaceContainerLowestLightBlue,
    surfaceContainerLow = surfaceContainerLowLightBlue,
    surfaceContainer = surfaceContainerLightBlue,
    surfaceContainerHigh = surfaceContainerHighLightBlue,
    surfaceContainerHighest = surfaceContainerHighestLightBlue,
)

val darkSchemeRebecka = darkColorScheme(
    primary = primaryDarkBlue,
    onPrimary = onPrimaryDarkBlue,
    primaryContainer = primaryContainerDarkBlue,
    onPrimaryContainer = onPrimaryContainerDarkBlue,
    secondary = secondaryDarkBlue,
    onSecondary = onSecondaryDarkBlue,
    secondaryContainer = secondaryContainerDarkBlue,
    onSecondaryContainer = onSecondaryContainerDarkBlue,
    tertiary = tertiaryDarkBlue,
    onTertiary = onTertiaryDarkBlue,
    tertiaryContainer = tertiaryContainerDarkBlue,
    onTertiaryContainer = onTertiaryContainerDarkBlue,
    error = errorDarkBlue,
    onError = onErrorDarkBlue,
    errorContainer = errorContainerDarkBlue,
    onErrorContainer = onErrorContainerDarkBlue,
    background = backgroundDarkBlue,
    onBackground = onBackgroundDarkBlue,
    surface = surfaceDarkBlue,
    onSurface = onSurfaceDarkBlue,
    surfaceVariant = surfaceVariantDarkBlue,
    onSurfaceVariant = onSurfaceVariantDarkBlue,
    outline = outlineDarkBlue,
    outlineVariant = outlineVariantDarkBlue,
    scrim = scrimDarkBlue,
    inverseSurface = inverseSurfaceDarkBlue,
    inverseOnSurface = inverseOnSurfaceDarkBlue,
    inversePrimary = inversePrimaryDarkBlue,
    surfaceDim = surfaceDimDarkBlue,
    surfaceBright = surfaceBrightDarkBlue,
    surfaceContainerLowest = surfaceContainerLowestDarkBlue,
    surfaceContainerLow = surfaceContainerLowDarkBlue,
    surfaceContainer = surfaceContainerDarkBlue,
    surfaceContainerHigh = surfaceContainerHighDarkBlue,
    surfaceContainerHighest = surfaceContainerHighestDarkBlue,
)

// REBECKA'S

// RED
val redColorScheme = lightColorScheme(
    primary = primaryRed,
    onPrimary = onPrimaryRed,
    primaryContainer = primaryContainerRed,
    onPrimaryContainer = onPrimaryContainerRed,
    secondary = secondaryRed,
    onSecondary = onSecondaryRed,
    secondaryContainer = secondaryContainerRed,
    onSecondaryContainer = onSecondaryContainerRed,
    tertiary = tertiaryRed,
    onTertiary = onTertiaryRed,
    tertiaryContainer = tertiaryContainerRed,
    onTertiaryContainer = onTertiaryContainerRed,
    error = errorRed,
    onError = onErrorRed,
    errorContainer = errorContainerRed,
    onErrorContainer = onErrorContainerRed,
    background = backgroundRed,
    onBackground = onBackgroundRed,
    surface = surfaceRed,
    onSurface = onSurfaceRed,
    surfaceVariant = surfaceVariantRed,
    onSurfaceVariant = onSurfaceVariantRed,
    outline = outlineRed,
    outlineVariant = outlineVariantRed,
    scrim = scrimRed,
    inverseSurface = inverseSurfaceRed,
    inverseOnSurface = inverseOnSurfaceRed,
    inversePrimary = inversePrimaryRed,
    surfaceDim = surfaceDimRed,
    surfaceBright = surfaceBrightRed,
    surfaceContainerLowest = surfaceContainerLowestRed,
    surfaceContainerLow = surfaceContainerLowRed,
    surfaceContainer = surfaceContainerRed,
    surfaceContainerHigh = surfaceContainerHighRed,
    surfaceContainerHighest = surfaceContainerHighestRed
)

// PINK
val pinkColorScheme = lightColorScheme(
    primary = primaryPink,
    onPrimary = onPrimaryPink,
    primaryContainer = primaryContainerPink,
    onPrimaryContainer = onPrimaryContainerPink,
    secondary = secondaryPink,
    onSecondary = onSecondaryPink,
    secondaryContainer = secondaryContainerPink,
    onSecondaryContainer = onSecondaryContainerPink,
    tertiary = tertiaryPink,
    onTertiary = onTertiaryPink,
    tertiaryContainer = tertiaryContainerPink,
    onTertiaryContainer = onTertiaryContainerPink,
    error = errorPink,
    onError = onErrorPink,
    errorContainer = errorContainerPink,
    onErrorContainer = onErrorContainerPink,
    background = backgroundPink,
    onBackground = onBackgroundPink,
    surface = surfacePink,
    onSurface = onSurfacePink,
    surfaceVariant = surfaceVariantPink,
    onSurfaceVariant = onSurfaceVariantPink,
    outline = outlinePink,
    outlineVariant = outlineVariantPink,
    scrim = scrimPink,
    inverseSurface = inverseSurfacePink,
    inverseOnSurface = inverseOnSurfacePink,
    inversePrimary = inversePrimaryPink,
    surfaceDim = surfaceDimPink,
    surfaceBright = surfaceBrightPink,
    surfaceContainerLowest = surfaceContainerLowestPink,
    surfaceContainerLow = surfaceContainerLowPink,
    surfaceContainer = surfaceContainerPink,
    surfaceContainerHigh = surfaceContainerHighPink,
    surfaceContainerHighest = surfaceContainerHighestPink
)

// SEVENTIES
val seventiesColorScheme = lightColorScheme(
    primary = primary70s,
    onPrimary = onPrimary70s,
    primaryContainer = primaryContainer70s,
    onPrimaryContainer = onPrimaryContainer70s,
    secondary = secondary70s,
    onSecondary = onSecondary70s,
    secondaryContainer = secondaryContainer70s,
    onSecondaryContainer = onSecondaryContainer70s,
    tertiary = tertiary70s,
    onTertiary = onTertiary70s,
    tertiaryContainer = tertiaryContainer70s,
    onTertiaryContainer = onTertiaryContainer70s,
    error = error70s,
    onError = onError70s,
    errorContainer = errorContainer70s,
    onErrorContainer = onErrorContainer70s,
    background = background70s,
    onBackground = onBackground70s,
    surface = surface70s,
    onSurface = onSurface70s,
    surfaceVariant = surfaceVariant70s,
    onSurfaceVariant = onSurfaceVariant70s,
    outline = outline70s,
    outlineVariant = outlineVariant70s,
    scrim = scrim70s,
    inverseSurface = inverseSurface70s,
    inverseOnSurface = inverseOnSurface70s,
    inversePrimary = inversePrimary70s,
    surfaceDim = surfaceDim70s,
    surfaceBright = surfaceBright70s,
    surfaceContainerLowest = surfaceContainerLowest70s,
    surfaceContainerLow = surfaceContainerLow70s,
    surfaceContainer = surfaceContainer70s,
    surfaceContainerHigh = surfaceContainerHigh70s,
    surfaceContainerHighest = surfaceContainerHighest70s
)

// CARNIVAL
val carnivalColorScheme = lightColorScheme(
    primary = primaryCarnival,
    onPrimary = onPrimaryCarnival,
    primaryContainer = primaryContainerCarnival,
    onPrimaryContainer = onPrimaryContainerCarnival,
    secondary = secondaryCarnival,
    onSecondary = onSecondaryCarnival,
    secondaryContainer = secondaryContainerCarnival,
    onSecondaryContainer = onSecondaryContainerCarnival,
    tertiary = tertiaryCarnival,
    onTertiary = onTertiaryCarnival,
    tertiaryContainer = tertiaryContainerCarnival,
    onTertiaryContainer = onTertiaryContainerCarnival,
    error = errorCarnival,
    onError = onErrorCarnival,
    errorContainer = errorContainerCarnival,
    onErrorContainer = onErrorContainerCarnival,
    background = backgroundCarnival,
    onBackground = onBackgroundCarnival,
    surface = surfaceCarnival,
    onSurface = onSurfaceCarnival,
    surfaceVariant = surfaceVariantCarnival,
    onSurfaceVariant = onSurfaceVariantCarnival,
    outline = outlineCarnival,
    outlineVariant = outlineVariantCarnival,
    scrim = scrimCarnival,
    inverseSurface = inverseSurfaceCarnival,
    inverseOnSurface = inverseOnSurfaceCarnival,
    inversePrimary = inversePrimaryCarnival,
    surfaceDim = surfaceDimCarnival,
    surfaceBright = surfaceBrightCarnival,
    surfaceContainerLowest = surfaceContainerLowestCarnival,
    surfaceContainerLow = surfaceContainerLowCarnival,
    surfaceContainer = surfaceContainerCarnival,
    surfaceContainerHigh = surfaceContainerHighCarnival,
    surfaceContainerHighest = surfaceContainerHighestCarnival
)

// GREEN
val greenColorScheme = lightColorScheme(
    primary = primaryGreen,
    onPrimary = onPrimaryGreen,
    primaryContainer = primaryContainerGreen,
    onPrimaryContainer = onPrimaryContainerGreen,
    secondary = secondaryGreen,
    onSecondary = onSecondaryGreen,
    secondaryContainer = secondaryContainerGreen,
    onSecondaryContainer = onSecondaryContainerGreen,
    tertiary = tertiaryGreen,
    onTertiary = onTertiaryGreen,
    tertiaryContainer = tertiaryContainerGreen,
    onTertiaryContainer = onTertiaryContainerGreen,
    error = errorGreen,
    onError = onErrorGreen,
    errorContainer = errorContainerGreen,
    onErrorContainer = onErrorContainerGreen,
    background = backgroundGreen,
    onBackground = onBackgroundGreen,
    surface = surfaceGreen,
    onSurface = onSurfaceGreen,
    surfaceVariant = surfaceVariantGreen,
    onSurfaceVariant = onSurfaceVariantGreen,
    outline = outlineGreen,
    outlineVariant = outlineVariantGreen,
    scrim = scrimGreen,
    inverseSurface = inverseSurfaceGreen,
    inverseOnSurface = inverseOnSurfaceGreen,
    inversePrimary = inversePrimaryGreen,
    surfaceDim = surfaceDimGreen,
    surfaceBright = surfaceBrightGreen,
    surfaceContainerLowest = surfaceContainerLowestGreen,
    surfaceContainerLow = surfaceContainerLowGreen,
    surfaceContainer = surfaceContainerGreen,
    surfaceContainerHigh = surfaceContainerHighGreen,
    surfaceContainerHighest = surfaceContainerHighestGreen
)

// DEFAULT Light
val lightSchemeDefaultLight = lightColorScheme(
    primary = primaryLightDefault,
    onPrimary = onPrimaryLightDefault,
    primaryContainer = primaryContainerLightDefault,
    onPrimaryContainer = onPrimaryContainerLightDefault,
    secondary = secondaryLightDefault,
    onSecondary = onSecondaryLightDefault,
    secondaryContainer = secondaryContainerLightDefault,
    onSecondaryContainer = onSecondaryContainerLightDefault,
    tertiary = tertiaryLightDefault,
    onTertiary = onTertiaryLightDefault,
    tertiaryContainer = tertiaryContainerLightDefault,
    onTertiaryContainer = onTertiaryContainerLightDefault,
    error = errorLightDefault,
    onError = onErrorLightDefault,
    errorContainer = errorContainerLightDefault,
    onErrorContainer = onErrorContainerLightDefault,
    background = backgroundLightDefault,
    onBackground = onBackgroundLightDefault,
    surface = surfaceLightDefault,
    onSurface = onSurfaceLightDefault,
    surfaceVariant = surfaceVariantLightDefault,
    onSurfaceVariant = onSurfaceVariantLightDefault,
    outline = outlineLightDefault,
    outlineVariant = outlineVariantLightDefault,
    scrim = scrimLightDefault,
    inverseSurface = inverseSurfaceLightDefault,
    inverseOnSurface = inverseOnSurfaceLightDefault,
    inversePrimary = inversePrimaryLightDefault,
    surfaceDim = surfaceDimLightDefault,
    surfaceBright = surfaceBrightLightDefault,
    surfaceContainerLowest = surfaceContainerLowestLightDefault,
    surfaceContainerLow = surfaceContainerLowLightDefault,
    surfaceContainer = surfaceContainerLightDefault,
    surfaceContainerHigh = surfaceContainerHighLightDefault,
    surfaceContainerHighest = surfaceContainerHighestLightDefault

)

// DEFAULT Dark
val darkSchemeDefaultDark = darkColorScheme(
    primary = primaryDarkDefault,
    onPrimary = onPrimaryDarkDefault,
    primaryContainer = primaryContainerDarkDefault,
    onPrimaryContainer = onPrimaryContainerDarkDefault,
    secondary = secondaryDarkDefault,
    onSecondary = onSecondaryDarkDefault,
    secondaryContainer = secondaryContainerDarkDefault,
    onSecondaryContainer = onSecondaryContainerDarkDefault,
    tertiary = tertiaryDarkDefault,
    onTertiary = onTertiaryDarkDefault,
    tertiaryContainer = tertiaryContainerDarkDefault,
    onTertiaryContainer = onTertiaryContainerDarkDefault,
    error = errorDarkDefault,
    onError = onErrorDarkDefault,
    errorContainer = errorContainerDarkDefault,
    onErrorContainer = onErrorContainerDarkDefault,
    background = backgroundDarkDefault,
    onBackground = onBackgroundDarkDefault,
    surface = surfaceDarkDefault,
    onSurface = onSurfaceDarkDefault,
    surfaceVariant = surfaceVariantDarkDefault,
    onSurfaceVariant = onSurfaceVariantDarkDefault,
    outline = outlineDarkDefault,
    outlineVariant = outlineVariantDarkDefault,
    scrim = scrimDarkDefault,
    inverseSurface = inverseSurfaceDarkDefault,
    inverseOnSurface = inverseOnSurfaceDarkDefault,
    inversePrimary = inversePrimaryDarkDefault,
    surfaceDim = surfaceDimDarkDefault,
    surfaceBright = surfaceBrightDarkDefault,
    surfaceContainerLowest = surfaceContainerLowestDarkDefault,
    surfaceContainerLow = surfaceContainerLowDarkDefault,
    surfaceContainer = surfaceContainerDarkDefault,
    surfaceContainerHigh = surfaceContainerHighDarkDefault,
    surfaceContainerHighest = surfaceContainerHighestDarkDefault

)